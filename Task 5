Given a sorted array of size N and an integer K, find the position(0-based indexing) at which K is present in the array using binary search.

Example 1:

Input:
N = 5
arr[] = {1 2 3 4 5} 
K = 4
Output: 3
Explanation: 4 appears at index 3.

#User function template for Python

class Solution:	
	def binarysearch(self, arr, n, k):
		# code here
	    l=0
        r=len(arr)-1
        while(l<=r):
            mid=(l+r)//2
            if(arr[mid]==k):
                return mid
            elif(k<arr[mid]):
                r=mid-1
            elif(k>arr[mid]):
                l=mid+1
        return -1
		 


